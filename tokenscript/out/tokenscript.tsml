<ts:token xmlns:ethereum="urn:ethereum:constantinople" xmlns:ts="http://tokenscript.org/2022/09/tokenscript" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Human-Interface" xsi:schemaLocation="http://tokenscript.org/2022/09/tokenscript https://www.tokenscript.org/schemas/2022-09/tokenscript.xsd">
    <ts:label>
        <ts:plurals xml:lang="en">
            <ts:string quantity="one">
                Human Interface Token
            </ts:string>
            <ts:string quantity="other">
                Human Interface Tokens
            </ts:string>
        </ts:plurals>
    </ts:label>
    <ts:meta>
        <ts:description xml:lang="en">
            TS for Human Interface
        </ts:description>
        <ts:aboutUrl xml:lang="en">
        </ts:aboutUrl>
        <ts:iconUrl xml:lang="en">
        </ts:iconUrl>
    </ts:meta>
    <ts:contract interface="erc20" name="Token">
        <ts:address network="80001">0x99e7338406075826f0efcfff6f735bfece6d876e</ts:address>
    </ts:contract>
    <ts:origins>
        
        <ts:ethereum contract="Token"/>
    </ts:origins>
    <ts:cards>
        <ts:viewContent xmlns="http://www.w3.org/1999/xhtml" name="common">
            
        <style>
					/* <![CDATA[ */
					
* {
	font-family: "Rubik", sans-serif;
	box-sizing: border-box;
}

body {
	color: #0B0B0B;
}

h1 {
	font-size: 22px;
}

h2 {
	font-size: 20px;
}

h3 {
	font-size: 18px;
}

h5 {
	font-size: 16px;
	margin-bottom: 12px;
}

p.light {
	color: #545454;
}

.loader-modal {
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
}

.card
{
	display: flex;
	justify-content: space-between;
	align-items: center;
	width: 100%;
	border-radius: 18px;
	background-color: rgb(32, 96, 204);
	box-shadow: rgba(0, 0, 0, 0.25) 0px 4px 123px 0px, rgba(0, 0, 0, 0.25) 0px 4px 18px 0px;
	padding-top: 18px;
	padding-bottom: 18px;
	padding-inline-start: 1.25rem;
	padding-inline-end: 1.25rem;
	margin-top: 0.75rem;
	margin-bottom: 0.75rem;
}

.card-image {
    width: 55px;
	height: 55px;
}

.section {
	display: flex;
	flex-direction: column;
	align-items: center;
}

.label {
    text-align: center;
    font-weight: 500;
    color: rgb(220, 210, 233);
    opacity: 0.66;
    font-size: 20px;
}

.title {
	color: #FFF;
	font-size: 22px;
}

.value {
  color: #FFF;
  font-size: 20px;
  font-weight: bold;
}

.valueSmall {
	color: #FFF;
	font-size: 14px;
	font-weight: bold;
}

.input-body {
	font-family: Arial, sans-serif;
}
.input-container {
	position: absolute;
	width: 100%;
	margin: 10px 20px 0px 20px;
}
.input-container label {
	position: absolute;
	top: -6px;
	left: 10px;
	color: rgb(32, 96, 204);
	background-color: #FFF;
	opacity: 1.00;
	transition: 0.3s;
	font-size: 12px;
	padding: 0px 2px 0px 2px;
}
.input-container input {
	width: 100%;
	padding: 20px 10px 10px;
	border: 1px solid rgb(32, 96, 204);
	border-radius: 4px;
}
					/* ]]> */
				</style></ts:viewContent>
        <ts:card buttonClass="primary" name="transfer" origins="Token" type="action">
            <ts:label>
                <ts:string xml:lang="en">
                    Transfer
                </ts:string>
            </ts:label>
            <ts:transaction>
                <ethereum:transaction contract="Token" function="transfer">
                    <ts:data>
                        <ts:address ref="to_"/>
                        <ts:uint256 ref="value_"/>
                    </ts:data>
                </ethereum:transaction>
            </ts:transaction>
            <ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
                <ts:viewContent name="common"/>
                
            <script type="text/javascript">//&lt;![CDATA[

	var value_erc721BalanceOf;
var value_owned;

	class Token {
		
		constructor(tokenInstance) {
			this.props = tokenInstance;
		}

		render() {
            return `&lt;div class="card"&gt;&lt;div class="card-image"&gt; 
        &lt;svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"&gt;
            &lt;g fill="none" fill-rule="evenodd"&gt;
                &lt;circle fill="#597DF2" cx="12" cy="12" r="12"/&gt;
                &lt;path fill="#FFF" d="M12 21.6v-5.173L6 12.69z"/&gt;
                &lt;path fill="#BDCBFA" d="M12 16.427V21.6l6-8.91zM12 1.8v6.93l6 2.584z"/&gt;
                &lt;path fill="#FFF" d="m12 1.8-6 9.514 6-2.584z"/&gt;
                &lt;path fill="#BDCBFA" d="m6 11.314 6 3.356V8.73z"/&gt;
                &lt;path fill="#7B96F5" d="m12 14.67 6-3.356-6-2.584z"/&gt;
            &lt;/g&gt;
        &lt;/svg&gt;  			    
        &lt;/div&gt;
        &lt;div class="text"&gt;
            &lt;p class="title"&gt;Erc721BalanceOf&lt;/p&gt;
            &lt;p class="value"&gt;${value_erc721BalanceOf}&lt;/p&gt;
        &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="card"&gt;&lt;div class="card-image"&gt; 
        &lt;svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"&gt;
            &lt;g fill="none" fill-rule="evenodd"&gt;
                &lt;circle fill="#597DF2" cx="12" cy="12" r="12"/&gt;
                &lt;path fill="#FFF" d="M12 21.6v-5.173L6 12.69z"/&gt;
                &lt;path fill="#BDCBFA" d="M12 16.427V21.6l6-8.91zM12 1.8v6.93l6 2.584z"/&gt;
                &lt;path fill="#FFF" d="m12 1.8-6 9.514 6-2.584z"/&gt;
                &lt;path fill="#BDCBFA" d="m6 11.314 6 3.356V8.73z"/&gt;
                &lt;path fill="#7B96F5" d="m12 14.67 6-3.356-6-2.584z"/&gt;
            &lt;/g&gt;
        &lt;/svg&gt;  			    
        &lt;/div&gt;
        &lt;div class="text"&gt;
            &lt;p class="title"&gt;Owned&lt;/p&gt;
            &lt;p class="value"&gt;${value_owned}&lt;/p&gt;
        &lt;/div&gt;
        &lt;/div&gt;
        &lt;br/&gt;&lt;h3&gt;Transfer&lt;/h3&gt;&lt;br/&gt;&lt;p&gt;Call transfer function&lt;br/&gt;`;
        }
	}

	web3.tokens.dataChanged = (oldTokens, updatedTokens, cardId) =&gt; {
		const currentTokenInstance = updatedTokens.currentInstance;
		value_erc721BalanceOf = currentTokenInstance.erc721BalanceOf
//value = Math.floor(1.0 * (currentTokenInstance.erc721BalanceOf / 10 ** 18) * 10000) / 10000; // &lt;-- use for decimals 18 return value
value_owned = currentTokenInstance.owned
//value = Math.floor(1.0 * (currentTokenInstance.owned / 10 ** 18) * 10000) / 10000; // &lt;-- use for decimals 18 return value

		document.getElementById(cardId).innerHTML = new Token(currentTokenInstance).render();
	};


//]]&gt;</script>
</ts:view>
        </ts:card>
        <ts:card buttonClass="secondary" name="Info" origins="Token" type="token">
            <ts:label>
                <ts:string xml:lang="en">
                    Info
                </ts:string>
            </ts:label>
            <ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
                <ts:viewContent name="common"/>
                
            <script type="text/javascript">//&lt;![CDATA[

	var value_erc20BalanceOf;
var value_erc721BalanceOf;

	class Token {
		
		constructor(tokenInstance) {
			this.props = tokenInstance;
		}

		render() {
            return `&lt;div class="card"&gt;&lt;div class="card-image"&gt; 
        &lt;svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"&gt;
            &lt;g fill="none" fill-rule="evenodd"&gt;
                &lt;circle fill="#597DF2" cx="12" cy="12" r="12"/&gt;
                &lt;path fill="#FFF" d="M12 21.6v-5.173L6 12.69z"/&gt;
                &lt;path fill="#BDCBFA" d="M12 16.427V21.6l6-8.91zM12 1.8v6.93l6 2.584z"/&gt;
                &lt;path fill="#FFF" d="m12 1.8-6 9.514 6-2.584z"/&gt;
                &lt;path fill="#BDCBFA" d="m6 11.314 6 3.356V8.73z"/&gt;
                &lt;path fill="#7B96F5" d="m12 14.67 6-3.356-6-2.584z"/&gt;
            &lt;/g&gt;
        &lt;/svg&gt;  			    
        &lt;/div&gt;
        &lt;div class="text"&gt;
            &lt;p class="title"&gt;Erc20BalanceOf&lt;/p&gt;
            &lt;p class="value"&gt;${value_erc20BalanceOf}&lt;/p&gt;
        &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="card"&gt;&lt;div class="card-image"&gt; 
        &lt;svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"&gt;
            &lt;g fill="none" fill-rule="evenodd"&gt;
                &lt;circle fill="#597DF2" cx="12" cy="12" r="12"/&gt;
                &lt;path fill="#FFF" d="M12 21.6v-5.173L6 12.69z"/&gt;
                &lt;path fill="#BDCBFA" d="M12 16.427V21.6l6-8.91zM12 1.8v6.93l6 2.584z"/&gt;
                &lt;path fill="#FFF" d="m12 1.8-6 9.514 6-2.584z"/&gt;
                &lt;path fill="#BDCBFA" d="m6 11.314 6 3.356V8.73z"/&gt;
                &lt;path fill="#7B96F5" d="m12 14.67 6-3.356-6-2.584z"/&gt;
            &lt;/g&gt;
        &lt;/svg&gt;  			    
        &lt;/div&gt;
        &lt;div class="text"&gt;
            &lt;p class="title"&gt;Erc721BalanceOf&lt;/p&gt;
            &lt;p class="value"&gt;${value_erc721BalanceOf}&lt;/p&gt;
        &lt;/div&gt;
        &lt;/div&gt;
        `;
        }
	}

	web3.tokens.dataChanged = (oldTokens, updatedTokens, cardId) =&gt; {
		const currentTokenInstance = updatedTokens.currentInstance;
		value_erc20BalanceOf = currentTokenInstance.erc20BalanceOf
//value = Math.floor(1.0 * (currentTokenInstance.erc20BalanceOf / 10 ** 18) * 10000) / 10000; // &lt;-- use for decimals 18 return value
value_erc721BalanceOf = currentTokenInstance.erc721BalanceOf
//value = Math.floor(1.0 * (currentTokenInstance.erc721BalanceOf / 10 ** 18) * 10000) / 10000; // &lt;-- use for decimals 18 return value

		document.getElementById(cardId).innerHTML = new Token(currentTokenInstance).render();
	};


//]]&gt;</script>
</ts:view>
        </ts:card>
    </ts:cards>
    <ts:attribute name="erc20BalanceOf">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.36</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">
                erc20BalanceOf
            </ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call as="uint" contract="Token" function="erc20BalanceOf">
                <ts:data>
                    <ts:address ref="owner_"/>
                </ts:data>
            </ethereum:call>
        </ts:origins>
    </ts:attribute>
    <ts:attribute name="erc721BalanceOf">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.36</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">
                erc721BalanceOf
            </ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call as="uint" contract="Token" function="erc721BalanceOf">
                <ts:data>
                    <ts:address ref="owner_"/>
                </ts:data>
            </ethereum:call>
        </ts:origins>
    </ts:attribute>
    <ts:attribute name="owned">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.36</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">
                owned
            </ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call as="uint" contract="Token" function="owned">
                <ts:data>
                    <ts:address ref="owner_"/>
                </ts:data>
            </ethereum:call>
        </ts:origins>
    </ts:attribute>
</ts:token>